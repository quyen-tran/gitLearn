// Overview //

Linked list is a "linear" data structure

    Each element in the linked list is a separate object
    All the objects are "linked" together by the reference field

There are two types of linked list:

    Singly linked list

        [ 23 | > ] --> [ 6 | > ] --> [ 15 | > ] --> (X)

    Doubly linked list

        (X) <-- [ < | 23 | > ] <--> [ < | 6 | > ] <--> [ < | 15 | > ] --> (X)


// Singly Linked List //

    [ 23 | > ] --> [ 6 | > ] --> [ 15 | > ] --> (X)

Unlike arrays, to access a random element in a singly-linked list in constant time require traversing from the head node to the specific element
It takes O(N) time on average to visit an element by index, where N is the length of the linked list

    The node 23 is denoted as the "head" of the linked list
    To visit the 3rd node (15), you must use the "next" field from the head node to get to the 2nd node (6), and again with the "next" field to get to the 3rd node (15)



